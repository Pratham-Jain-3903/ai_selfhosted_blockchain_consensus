\documentclass[12pt,a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{listings}
\lstset{
  basicstyle=\small\ttfamily,
  keywordstyle=\color{blue},
  stringstyle=\color{red},
  commentstyle=\color{green!60!black},
  numbers=left,
  numberstyle=\tiny,
  numbersep=5pt
}
\usepackage{xcolor}
\usepackage{float}
\usepackage{tikz}
\usepackage{caption}
\usepackage{subcaption}


\title{Blockchain is all you need : Enhancing AI Security Through Blockchain for Tamper-Resistant Collaborative Machine Learning}
\author{Pratham Jain \\ \href{mailto:Prathamjain3903@gmail.com}{Prathamjain3903@gmail.com}}
\date{\today}

\usepackage{hyperref}

\begin{document}

\maketitle

\section{Executive Summary/Problem Statement}
This research addresses the integration of machine learning capabilities with blockchain technology to create a decentralized, transparent, and collaborative framework for model training and deployment. With the increasing need for trust and transparency in AI systems, blockchain offers a promising solution for immutable record-keeping and verification of model development. However, practical implementations that demonstrate the core principles and trade-offs of this integration remain scarce, particularly those accessible to developers without specialized knowledge in both domains.

This project presents a lightweight implementation of a blockchain system with integrated machine learning capabilities, focused on incremental learning of a K-Nearest Neighbors (KNN) classifier. The system enables participants to collaboratively build datasets and train models while maintaining a verifiable history of all contributions and model updates. By addressing the practical challenges of blockchain-ML integration in an accessible manner, this research fills a critical gap between theoretical research and practical implementation.

\section{Objectives}
The primary objectives of this research are:

\begin{enumerate}
    \item To develop a functional and accessible implementation of a blockchain system with integrated machine learning capabilities
    \item To demonstrate how incremental learning models (specifically KNN classifiers) can effectively operate within blockchain constraints
    \item To analyze and document the trade-offs between decentralization, transparency, and computational efficiency in blockchain-based ML systems
    \item To provide a foundation for further research and development in decentralized AI systems
    \item To create educational resources that make blockchain-ML integration concepts accessible to a wider audience of developers and researchers
\end{enumerate}

These objectives address important technical and economic aspects of decentralized AI systems, which are increasingly relevant as organizations seek to deploy trustworthy and collaborative AI solutions.

\section{Major Scientific Fields of Interest/Literature Review}
This research intersects several major scientific fields:

\begin{itemize}
    \item Blockchain Technology
    \item Machine Learning
    \item Distributed Computing
    \item Cryptography
    \item Consensus Mechanisms
\end{itemize}

Recent literature has highlighted significant advances in the integration of blockchain and machine learning:

\subsection{Foundational Work}
"Decentralized \& Collaborative AI on Blockchain" (Harris and Waggoner, 2019 IEEE International Conference on Blockchain) from Microsoft explores frameworks for participants to collaboratively build datasets and use smart contracts to host continuously updated ML models on a blockchain. This work establishes the theoretical foundation for blockchain-based ML systems.

\subsection{Recent Developments in Blockchain-based ML}
\begin{itemize}
    \item "Opp/ai: Optimistic Privacy-Preserving AI on Blockchain" (So et al., 2024) introduces a hybrid framework combining Zero-Knowledge Machine Learning (zkML) for privacy with Optimistic Machine Learning (opML) for efficiency, balancing privacy protection and computational efficiency in blockchain environments.
    
    \item "OpML: Optimistic Machine Learning on Blockchain" (Conway et al., 2024) presents opML as an innovative approach enabling blockchain systems to conduct AI model inference through an interactive fraud proof protocol, offering improved cost efficiency while maintaining verification capabilities.
    
    \item "A New Consensus Mechanism for Blockchained Federated Learning Systems Using Optimistic Rollups" (Gonçalves et al., 2024) explores using optimistic rollups to enhance security in federated learning frameworks on blockchain.
    
    \item "A Quality-of-Service Compliance System using Federated Learning and Optimistic Rollups" (Gonçalves et al., 2023) examines privacy preservation in edge computing, using federated learning to keep sensitive data on source machines while leveraging blockchain for security and incentive mechanisms.
\end{itemize}

\section{Significance of the Topic/Research Problem}
The integration of blockchain and machine learning offers several significant benefits that address current challenges in AI development and deployment:

\begin{enumerate}
    \item \textbf{Transparency and Trust}: As AI systems increasingly influence critical decisions, blockchain provides a verifiable record of model development, increasing trust in the resulting models.
    
    \item \textbf{Collaborative Development}: Decentralized frameworks enable diverse groups of contributors to participate in model development without requiring trust in a central authority.
    
    \item \textbf{Data Sovereignty}: Contributors maintain control over their data while still participating in collaborative model training.
    
    \item \textbf{Incentivization}: Blockchain-based systems can incorporate reward mechanisms for valuable contributions, potentially improving data quality and model performance.
    
    \item \textbf{Auditable AI}: Regulatory compliance and ethical AI development benefit from the immutable record of training data and model updates.
    
    \item \textbf{Democratization of AI}: Public access to models deployed on blockchain can reduce barriers to AI adoption.
\end{enumerate}

These benefits are particularly relevant as concerns about AI transparency, bias, and centralization continue to grow in both academic and public discourse.

\section{Novelty of the Research Problem}
This research differs from existing work in several important ways:

\begin{enumerate}
    \item \textbf{Accessibility Focus}: While most research focuses on theoretical frameworks or highly specialized implementations, this project creates an accessible implementation that clearly demonstrates core concepts.
    
    \item \textbf{Practical Constraints}: The research directly addresses practical constraints of blockchain-ML integration through a working implementation, not just theoretical analysis.
    
    \item \textbf{Incremental Learning Emphasis}: The focus on incremental learning models specially adapted for blockchain constraints offers insights not prominent in existing literature.
    
    \item \textbf{Educational Approach}: The implementation is designed to serve as both a functional system and an educational resource, bridging the gap between theory and practice.
    
    \item \textbf{Trade-off Analysis}: The project provides concrete analysis of the trade-offs between decentralization, computational efficiency, and model performance.
\end{enumerate}

By focusing on practical implementation and accessibility, this research complements the more theoretical or specialized approaches in existing literature.

\section{Need of the Project/Research Problem}
Several factors underline the current need for this research:

\begin{enumerate}
    \item \textbf{Growing Demand for Trustworthy AI}: As AI systems increasingly impact daily life, the need for transparent and verifiable AI development processes is growing.
    
    \item \textbf{Data Privacy Concerns}: Traditional centralized ML approaches raise significant privacy concerns, which decentralized approaches can help address.
    
    \item \textbf{Lack of Accessible Implementations}: While theoretical research is abundant, practical implementations that demonstrate blockchain-ML integration remain scarce.
    
    \item \textbf{Educational Gap}: There is a significant gap in resources that help developers understand and implement blockchain-ML integration.
    
    \item \textbf{Need for Alternative ML Paradigms}: As centralized AI development concentrates power in large tech companies, alternative paradigms for collaborative, decentralized AI development are needed.
\end{enumerate}

\section{Technology Gap}
Our analysis of current research and implementations reveals several important technology gaps:

\begin{enumerate}
    \item \textbf{Implementation Accessibility Gap}: While recent research has made significant advances in blockchain-based ML systems focusing on complex models and optimistic approaches, there remains a notable gap in accessible implementations that demonstrate the fundamental principles of blockchain-ML integration. Most existing solutions require specialized knowledge in both domains and substantial computational resources.
    
    \item \textbf{Practical Constraint Management}: Limited attention has been paid to practical approaches for managing blockchain constraints (storage cost, computational limitations) in ML model training.
    
    \item \textbf{Incremental Learning Focus}: Most blockchain-ML research focuses on federated learning or zero-knowledge proofs, with less attention to incremental learning approaches that may be more suitable for blockchain constraints.
    
    \item \textbf{Educational Resources}: There is a lack of resources that bridge theoretical knowledge with practical implementation.
\end{enumerate}

Our research addresses these gaps by:

\begin{enumerate}
    \item Providing a lightweight implementation that clearly demonstrates the core concepts
    \item Using a simpler model (KNN classifier) appropriate for educational purposes and blockchain storage constraints
    \item Creating a practical example of incremental learning on blockchain without requiring advanced cryptographic knowledge
    \item Developing an accessible entry point for developers interested in blockchain-ML integration
\end{enumerate}

\section{Methodology}
\subsection{System Architecture}

\begin{figure}
    \centering
    \includegraphics[width=1\linewidth]{architecture.png}
    \caption{System Architecture Diagram}
   \label{fig:architecture}
\end{figure}

The system architecture shown in Figure~\ref{fig:architecture} illustrates the integration of machine learning capabilities with blockchain technology. At the core, the blockchain component (left) provides the foundation for decentralized storage, verification, and consensus. This includes modules for block management, transaction processing, and a Proof-of-Work consensus mechanism.

The ML module (right) contains the KNN classifier implementation that operates on data stored within the blockchain. The REST API serves as the interface between users and the system, allowing for data contributions, model training triggers, and prediction requests. Cryptography utilities ensure secure transactions and data integrity, while the networking component enables node-to-node communication across the distributed network.

This architecture enables transparent, verifiable machine learning by ensuring all model updates are recorded immutably in the blockchain, providing a complete audit trail of the model's development.

\subsection{Model Training Flow}

\begin{figure}
    \centering
    \includegraphics[width=1\linewidth]{training_flow.png}
\caption{Model Training Flow Diagram}
\label{fig:model_training_flow}
\end{figure}

The Model Training Flow, depicted in Figure~\ref{fig:model_training_flow}, illustrates the process through which new data contributes to model improvement. The flow begins with data contribution, where users submit feature vectors and corresponding labels through a data transaction. These transactions are processed and added to the pending transaction pool.

Once included in a block through the mining process, these transactions undergo consensus validation to ensure legitimacy. After validation, the system extracts the new data point and updates the KNN model incrementally. This approach allows the model to evolve with each new valid data contribution without requiring complete retraining.

The incremental nature of this training flow is particularly well-suited for blockchain environments, as it minimizes computational overhead while maintaining a verifiable record of each model update. Every step in this flow is recorded on the blockchain, ensuring full transparency in the model training process.

\subsection{Transaction Types}
\begin{figure}
    \centering
    \includegraphics[width=1\linewidth]{transaction_types.png}
 \caption{Transaction Types Diagram}
 \label{fig:transaction_types}
\end{figure}

The blockchain implementation supports four distinct transaction types as illustrated in Figure~\ref{fig:transaction_types}, each serving a specific purpose in the machine learning integration:

\begin{enumerate}
    \item \textbf{Model Initialization Transactions} establish the initial KNN model on the blockchain, including hyperparameters such as the number of neighbors (k) and distance metric. These transactions occur once at the beginning of model deployment or when fundamental model parameters require modification.
    
    \item \textbf{Data Addition Transactions} contain new feature vectors and corresponding labels that contributors want to add to the training dataset. These transactions represent the primary mechanism for collaborative dataset building.
    
    \item \textbf{Model Update Transactions} record changes to the model state after incorporating new data points. These transactions ensure that all nodes maintain consistent model states and provide an immutable record of the model's evolution.
    
    \item \textbf{Standard Value Transactions} handle token transfers between users for traditional blockchain functionality, potentially including incentive mechanisms for valuable data contributions.
\end{enumerate}

This transaction type system enables fine-grained control over model development while maintaining blockchain's core properties of immutability and transparency. Each transaction type follows specific validation rules appropriate for its purpose, ensuring system integrity.

\subsection{Comparison of Traditional ML and Blockchain-based ML}

\begin{figure}
    \centering
    \includegraphics[width=1\linewidth]{traditional_vs_blockchain.png}
\caption{Comparison of Traditional ML and Blockchain-based ML}
\label{fig:ml_comparison}
\end{figure}

Figure~\ref{fig:ml_comparison} illustrates the fundamental differences between traditional machine learning approaches and our blockchain-based implementation. The comparison focuses on four key aspects of the ML workflow:

\begin{itemize}
    \item \textbf{Data Management}: Traditional ML typically relies on centralized data storage controlled by a single entity, leading to potential issues with data access and control. In contrast, our blockchain approach enables distributed data contributions where contributors maintain sovereignty over their data while still participating in the collaborative training process.
    
    \item \textbf{Training Process}: Centralized training in traditional systems creates a "black box" where the evolution of the model remains hidden. The blockchain-based approach provides complete transparency in the training process, with each step recorded immutably in the blockchain.
    
    \item \textbf{Model Updates}: In traditional ML, model updates are opaque and difficult to verify. Our implementation records each incremental update on the blockchain, making every change to the model fully auditable and verifiable by all participants.
    
    \item \textbf{Deployment}: Traditional ML deployments are centrally controlled and may limit access. The blockchain-based system enables decentralized access to the model, democratizing AI capabilities while maintaining security through cryptographic mechanisms.
\end{itemize}

These differences highlight how our blockchain-based approach addresses key challenges in AI transparency, trust, and collaboration without sacrificing model performance or usability.

\subsection{Implementation Process}

The implementation follows these key steps:

\begin{enumerate}
    \item \textbf{Blockchain Core Development}: Implementation of the foundational blockchain structure with blocks, transactions, and consensus mechanisms.
    
    \item \textbf{ML Model Integration}: Integration of a KNN classifier that can be incrementally updated with new data points added to the blockchain.
    
    \item \textbf{API Development}: Creation of RESTful APIs to interact with both blockchain and ML functionality.
    
    \item \textbf{Testing and Validation}: Comprehensive testing of both blockchain functionality and ML model performance.
    
    \item \textbf{Performance Analysis}: Analysis of system performance, including blockchain storage requirements, computational costs, and ML model accuracy.
\end{enumerate}

\subsection{API Endpoints Implementation}

The system implements several key API endpoints to enable interaction with both the blockchain and machine learning components:

\begin{enumerate}
    \item \textbf{/mine} (GET): Triggers the mining process to create new blocks, processing any pending transactions including data additions.
    
    \item \textbf{/transactions/new} (POST): Creates a new standard value transaction between blockchain participants.
    
    \item \textbf{/chain} (GET): Returns the complete blockchain for verification and auditing purposes.
    
    \item \textbf{/flower/add} (POST): Creates a special transaction containing Iris flower data (features and label) to be added to the training dataset.
    
    \item \textbf{/flower/predict} (POST): Uses the current model state to predict the flower type from provided features.
    
    \item \textbf{/model/info} (GET): Returns information about the current model state, including training data size.
    
    \item \textbf{/model/evaluate} (GET): Evaluates the current model performance using held-out test data, tracking how accuracy evolves as new data points are added through blockchain transactions.
\end{enumerate}

Each endpoint was implemented with proper error handling and validation to ensure system integrity. As shown in the Postman test results, all endpoints respond with appropriate status codes (200 OK for GET requests and 201 CREATED for POST requests) and maintain response times under 250ms even for computationally intensive operations like mining.

\subsection{Model Evaluation and Performance Tracking}

A critical component of the implementation is the model evaluation system that tracks performance metrics as new data is added through blockchain transactions. The \textbf{/model/evaluate} endpoint specifically:

\begin{itemize}
    \item Maintains a consistent test dataset separate from the training data
    \item Tracks the number of data points the model has been trained on (\texttt{data\_count})
    \item Calculates accuracy and detailed classification metrics after each model update
    \item Reports per-class precision, recall, and F1 scores
\end{itemize}

The implementation ensures that with each new flower data transaction added to a mined block:
\begin{enumerate}
    \item The \texttt{data\_count} is automatically incremented
    \item The model is retrained incrementally with the new data point
    \item All updates are serialized and stored on the blockchain
\end{enumerate}

This creates a transparent record of model evolution over time, with each contribution traceable to specific blocks and transactions. The evaluation metrics provide objective evidence of how collaborative data contributions affect model performance.

\subsection{Serialization and Persistence}

To ensure model states can be properly stored on the blockchain and reconstructed by any node, we implemented custom serialization and deserialization methods:

\begin{itemize}
    \item Model objects (including the KNN classifier and scaler) are pickled and converted to base64 encoded strings
    \item Training data and test data are similarly serialized for storage
    \item The \texttt{deserialize} method reconstructs the model from blockchain data
\end{itemize}

This approach ensures that:
\begin{enumerate}
    \item The entire model state, including the training data and scaler parameters, is preserved
    \item Any node can reproduce identical predictions from the model state
    \item The training history remains verifiable through blockchain records
\end{enumerate}

The implementation follows principles outlined in the Harris and Waggoner paper (2019) regarding model storage on blockchain while addressing practical storage constraints.

\subsection{Machine Learning Approach}

The ML component uses a KNN classifier with the following characteristics:

\begin{itemize}
    \item Initially trained on the scikit-learn Iris dataset
    \item Supports incremental learning as new data points are added via transactions
    \item Model state is stored in the blockchain itself, ensuring transparency and immutability
    \item Features a prediction API that uses the latest model state from the blockchain
\end{itemize}

\begin{figure}
    \centering
    \includegraphics[width=\linewidth]{inference_workflow.png}
    \caption{inference workflow}
    \label{fig:inference_workflow}
\end{figure}

This approach follows the suggestion from Microsoft's research paper that models capable of efficiently updating with one sample are ideal for blockchain integration to lower transaction costs.

\subsection{Performance Results}

The Postman test results demonstrate the system's performance characteristics:

\begin{itemize}
    \item \textbf{Mining endpoint}: 239ms average response time
    \item \textbf{Transaction creation}: 9ms average response time
    \item \textbf{Chain retrieval}: 6ms average response time
    \item \textbf{Flower data addition}: 13ms average response time
    \item \textbf{Prediction}: 17ms average response time
    \item \textbf{Model info}: 5ms average response time
    \item \textbf{Model evaluation}: 16ms average response time
\end{itemize}

These results indicate that the system maintains efficient performance even for computationally intensive operations. The quick response times for the model evaluation endpoint (16ms) demonstrate that tracking model performance as the blockchain grows remains efficient and practical.

The system successfully maintains the relationship between blockchain transactions and model performance metrics, allowing participants to observe how their data contributions affect model accuracy in real-time. As new transactions containing flower data are mined into blocks, the \texttt{data\_points\_trained} count increases accordingly, providing transparency into the collaborative training process.

\subsection{Evaluation Metrics}

The system is evaluated based on:

\begin{itemize}
    \item ML model accuracy and improvement with additional training data
    \item Blockchain storage efficiency
    \item Computational cost of model updates
    \item System scalability as the blockchain grows
    \item Transparency and verifiability of the model training process
\end{itemize}

\section{Final Summary}
This research develops an accessible implementation of blockchain-based machine learning that demonstrates key concepts in a practical manner. By focusing on an incremental learning approach with a KNN classifier, the project addresses the practical constraints of blockchain systems while providing transparency and collaborative capabilities.

The implementation serves both as a functional system and an educational resource, helping to bridge the gap between theoretical research and practical application in the emerging field of decentralized AI. By addressing identified technology gaps and providing concrete analysis of trade-offs, this research contributes to the advancement of blockchain-ML integration and helps make these technologies more accessible to a wider audience of developers and researchers.

As concerns about AI transparency, trust, and centralization continue to grow, blockchain-based approaches offer promising solutions that this research helps make more practical and understandable. Future work could extend this foundation to incorporate more advanced ML models, additional privacy-preserving techniques, and enhanced incentive mechanisms.

\section{Resources and Contact Information}
This implementation is available as an open-source project with the following resources:

\begin{itemize}
    \item \textbf{GitHub Repository}: \url{https://github.com/Pratham-Jain-3903/ai_selfhosted_blockchain_consensus.git}
    \item \textbf{Postman Workspace}: \url{https://www.postman.com/luminouschatbotdevteam/workspace/cs21b1021-blockchain-consensus-testing/collection/41342955-0494f37a-cc20-4753-978d-6ee6d64a4209?action=share&creator=41342955}
    \item \textbf{Contact Email}: \href{mailto:Prathamjain3903@gmail.com}{Prathamjain3903@gmail.com}
\end{itemize}

\begin{figure}
    \centering
    \includegraphics[width=1\linewidth]{postman_workspace.png}
    \caption{postman workspace}
    \label{fig:postman_workspace}
\end{figure}

% \includegraphics[width=1\linewidth]{postman_workspace.png}

For questions, collaboration opportunities, or access to additional resources related to this project, please use the contact information above.

\end{document}